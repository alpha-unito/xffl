xffl.cli.exec
=============

.. py:module:: xffl.cli.exec

.. autoapi-nested-parse::

   xFFL-handled experiment launching.

   This script wraps StreamFlow with a simple Python CLI,
   offering a homogeneous interface with xFFL.



Attributes
----------

.. autoapisummary::

   xffl.cli.exec.logger


Functions
---------

.. autoapisummary::

   xffl.cli.exec.setup_execution_env
   xffl.cli.exec.exec
   xffl.cli.exec.main


Module Contents
---------------

.. py:data:: logger
   :type:  logging.Logger

   Default xFFL logger


.. py:function:: setup_execution_env(args: types.SimpleNamespace) -> Dict[str, str]

   Setup the environment variables for the execution.

   :param args: CLI arguments
   :type args: argparse.Namespace
   :raises ValueError: If no execution environment (venv or image) is provided
   :return: Mapping of environment variables
   :rtype: Dict[str, str]


.. py:function:: exec(args: argparse.Namespace) -> int

   Execute the xFFL execution.

   :param args: CLI arguments
   :type args: argparse.Namespace
   :return: Exit code (0 if success, 1 otherwise)
   :rtype: int


.. py:function:: main(args: argparse.Namespace) -> int

   Entrypoint for xFFL execution.

   :param args: CLI arguments
   :type args: argparse.Namespace
   :return: Exit code
   :rtype: int


