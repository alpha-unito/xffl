xffl.custom.models
==================

.. py:module:: xffl.custom.models

.. autoapi-nested-parse::

   List of supported models



Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/xffl/custom/models/llama/index
   /autoapi/xffl/custom/models/mixtral/index
   /autoapi/xffl/custom/models/model_info/index


Attributes
----------

.. autoapisummary::

   xffl.custom.models.MODELS


Classes
-------

.. autoapisummary::

   xffl.custom.models.Llama
   xffl.custom.models.Mixtral
   xffl.custom.models.ModelInfo


Package Contents
----------------

.. py:class:: Llama

   Bases: :py:obj:`xffl.custom.models.model_info.ModelInfo`


   LLaMA essential information


   .. py:attribute:: model_type
      :type:  Type[transformers.LlamaForCausalLM]


   .. py:attribute:: decoder_layer
      :type:  Type[transformers.models.llama.modeling_llama.LlamaDecoderLayer]


   .. py:attribute:: wrapping_policy
      :type:  Callable


   .. py:attribute:: path
      :type:  xffl.custom.types.FolderLike
      :value: '/path/to/llama/model'



.. py:class:: Mixtral

   Bases: :py:obj:`xffl.custom.models.model_info.ModelInfo`


   Mixtral essential information


   .. py:attribute:: model_type
      :type:  Type


   .. py:attribute:: decoder_layer
      :type:  Type


   .. py:attribute:: wrapping_policy
      :type:  Callable


   .. py:attribute:: path
      :type:  xffl.custom.types.FolderLike
      :value: '/path/to/mixtral/model'



.. py:class:: ModelInfo

   Bases: :py:obj:`abc.ABC`


   Abstract model essential information

   :param model_type: Class of the selected model
   :type model_type: Type
   :param decoder_layer: Class of the decoder layer of the model
   :type decoder_layer: Type
   :param wrapping_policy: FSDP wrapping function for the decoder layer
   :type wrapping_policy: Callable
   :param path: Path to the model's folder
   :type path: FolderLike


   .. py:attribute:: model_type
      :type:  Type


   .. py:attribute:: decoder_layer
      :type:  Type


   .. py:attribute:: wrapping_policy
      :type:  Callable


   .. py:attribute:: path
      :type:  xffl.custom.types.FolderLike


.. py:data:: MODELS
   :type:  Final[Mapping[str, model_info.ModelInfo]]

   Supported models dictionary 


