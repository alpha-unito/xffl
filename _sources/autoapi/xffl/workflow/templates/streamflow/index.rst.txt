xffl.workflow.templates.streamflow
==================================

.. py:module:: xffl.workflow.templates.streamflow

.. autoapi-nested-parse::

   Collection of StreamFlow-related template code



Classes
-------

.. autoapisummary::

   xffl.workflow.templates.streamflow.StreamFlowFile


Module Contents
---------------

.. py:class:: StreamFlowFile

   Bases: :py:obj:`xffl.workflow.config.YamlConfig`


   Class modelling a StreamFlow configuration file as a YamlConfig object


   .. py:attribute:: deployments
      :type:  collections.abc.MutableMapping[str, Any]


   .. py:attribute:: step_bindings
      :type:  collections.abc.MutableMapping[str, Any]


   .. py:method:: get_default_content() -> collections.abc.MutableMapping[str, Any]
      :classmethod:


      Returns a basic StreamFlow configuration to be updated and saved into a .yml

      :return: Basic StreamFlow configuration for xFFL
      :rtype: MutableMapping[str, Any]



   .. py:method:: add_inputs(facility_name: str) -> None

      Adds a new facility to the StreamFlow configuration file

      :param facility_name: Facility's name
      :type facility_name: str



   .. py:method:: add_deployment(facility_name: str, address: str, username: str, ssh_key: xffl.custom.types.FileLike, step_workdir: xffl.custom.types.FolderLike, slurm_template: xffl.custom.types.FileLike) -> None

      Adds a new facility deployment to the StreamFlow configuration

      :param facility_name: Facility's name
      :type facility_name: str
      :param address: Facility's address (IP, FQDN)
      :type address: str
      :param username: Username to use to log in the facility
      :type username: str
      :param ssh_key: SSH key to use to log in the facility
      :type ssh_key: FileLike
      :param step_workdir: Directory where to store temporary StreamFlow SSH files
      :type step_workdir: FolderLike
      :param slurm_template: Facility's SLURM file template
      :type slurm_template: FileLike
      :raises ValueError: If the facility is already present in the StreamFlow configuration



   .. py:method:: add_training_step(facility_name: str, mapping: collections.abc.MutableMapping[str, str]) -> None

      Adds new training step bindings to the StreamFlow configuration

      :param facility_name: Facility's name
      :type facility_name: str
      :param mapping: Mapping between the StreamFlow binding names and their values
      :type mapping: MutableMapping[str, str]
      :raises ValueError: If the facility is already present in the StreamFlow configuration



   .. py:method:: add_root_step(workdir: str)


   .. py:method:: create_binding(name: str, values: collections.abc.MutableMapping[str, Any], location: Optional[str] = None, _type: str = 'step') -> collections.abc.MutableMapping[str, Any]
      :staticmethod:


      Creates a new StreamFlow binding

      :param name: Name of the StreamFlow binding
      :type name: str
      :param values: Value of the StreamFlow binding
      :type values: FolderLike
      :param location: Facility's name, defaults to None
      :type location: Optional[str], optional
      :param _type: Type of StreamFlow binding, defaults to "step"
      :type _type: str
      :return: A well-formatted StreamFlow binding
      :rtype: MutableMapping[str, Any]



