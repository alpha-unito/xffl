[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "xFFL"
version = "v0.1.0"
description = "Cross-Facility Federated Learning"
keywords = ["federated learning", "cross facility", "cross-facility", "hpc", "cloud", "workflow", "streamflow"]

readme = "README.md"
license = {text = "LGPL-3.0-only"}
# license-files = ["LICENSE", "LICENSE.LESSER"]

requires-python = ">=3.9"

authors = [
    {name = "Gianluca Mittone", email = "gianluca.mittone@unito.it"},
    {name = "Alberto Mulone", email = "alberto.mulone@unito.it"},
    {name = "Iacopo Colonnelli", email = "iacopo.colonnelli@unito.it"},
    {name = "Robert Birke", email = "robert.birke@unito.it"},
    {name = "Marco Aldinucci", email = "marco.aldinucci@unito.it"}
]
maintainers = [
    {name = "Gianluca Mittone", email = "gianluca.mittone@unito.it"},
    {name = "Alberto Mulone", email = "alberto.mulone@unito.it"}
]

classifiers = [
    "Development Status :: 3 - Alpha",

    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",

    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",

    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing"
]

[project.scripts]
xffl = "xffl.cli.cli:run"

[project.urls]
Homepage = "https://hpc4ai.unito.it/hpc-federation/"
Repository = "https://github.com/alpha-unito/xffl"
Issues = "https://github.com/alpha-unito/xffl/issues"


[tool.setuptools]
packages = [
    "xffl",
    "xffl.cli",
    "xffl.custom",
    "xffl.learning",
    "xffl.utils",
    "xffl.workflow",
    "xffl.workflow.scripts",
    "xffl.workflow.scripts.facilities",
    "xffl.workflow.templates",
]

[tool.setuptools.package-data]
"xffl.workflow.scripts" = ["*.sh"]
"xffl.workflow.scripts.facilities" = ["*.sh"]

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}