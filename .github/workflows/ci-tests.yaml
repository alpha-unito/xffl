name: "CI Tests"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  cli-config:
    name: "Test xffl config command"
    strategy:
      matrix:
        on: [ "ubuntu-24.04"]
        python: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
        include:
          - on: "macos-14"
            python: "3.13"
    runs-on: ${{ matrix.on }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: pip
          cache-dependency-path: requirements.txt
      - name: "Install Python Dependencies"
        run: python -m pip install .
      - name: "Create an xffl project using the config option in the CLI."
        env:
          CHECKSUM: "01b83a89c037e8ba9eb82ee3f0e5fb820ff1f0f2334c2b32aa6d4a6803e1c345"
        run: |
          cd tests/cli
          HASH="$(make checksum-config | tail -n 1)"
          echo "Project checksum is ${HASH}"
          test "${HASH}" == "${CHECKSUM}"
      - name: "Validate project"
        run: |
          cd tests/cli
          make setup
          make generate-project
          xffl run --project test --validate
          make clean
  static-checks:
    name: "xFFL static checks"
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        step: [ "lint" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
          cache-dependency-path: |
            requirements.txt
            lint-requirements.txt
      - name: "Install Python Dependencies and xFFL"
        run: |
          python -m pip install .
          python -m pip install -r lint-requirements.txt
      - name: "Run xFFL static analysis"
        run: make format-check codespell-check flake8